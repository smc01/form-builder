{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/base-component.ts","webpack:///./src/app/core/globals.ts","webpack:///./src/app/features/features.module.ts","webpack:///./src/app/features/form-builder/form-builder.component.html","webpack:///./src/app/features/form-builder/form-builder.component.scss","webpack:///./src/app/features/form-builder/form-builder.component.ts","webpack:///./src/app/material-module/material-module.module.ts","webpack:///./src/app/modules/shared/components/models/ModelBase.ts","webpack:///./src/app/modules/shared/components/text-input/models/TextboxModel.ts","webpack:///./src/app/modules/shared/components/text-input/pop-up-settings/text-input-settings.component.html","webpack:///./src/app/modules/shared/components/text-input/pop-up-settings/text-input-settings.component.scss","webpack:///./src/app/modules/shared/components/text-input/pop-up-settings/text-input-settings.component.ts","webpack:///./src/app/modules/shared/components/text-input/text-box.component.html","webpack:///./src/app/modules/shared/components/text-input/text-box.component.scss","webpack:///./src/app/modules/shared/components/text-input/text-box.component.ts","webpack:///./src/app/modules/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormBuilderComponent } from './features/form-builder/form-builder.component';\n\nconst routes: Routes = [\n\n  { path: 'en-US/Form/FormBuilder/:id', component: FormBuilderComponent },\n  { path: 'fr-FR/Form/FormBuilder/:id', component: FormBuilderComponent },\n  { path: 'zh-CN/Form/FormBuilder/:id', component: FormBuilderComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \".example-box:active {\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3NtYy9fd29yay9mb3JtLWJ1aWxkZXIvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUU7RUFDRSxzSEFFOEMsRUFDL0MiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgXG4gIC5leGFtcGxlLWJveDphY3RpdmUge1xuICAgIGJveC1zaGFkb3c6IDAgNXB4IDVweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4yKSxcbiAgICAgICAgICAgICAgICAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLFxuICAgICAgICAgICAgICAgIDAgM3B4IDE0cHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gIH1cbiAgIl19 */\"","import { Component } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem, copyArrayItem, CdkDragEnter, CdkDragExit, CdkDragEnd } from '@angular/cdk/drag-drop';\nimport { BaseComponent } from './base-component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'form-builder';\n  formComponents = [ ];\n\n  private _destinationList: BaseComponent[] = [];\n  public get destinationList(): BaseComponent[] {\n    return this._destinationList;\n  }\n  public set destinationList(value: BaseComponent[]) {\n    this._destinationList = value;\n  }\n\n\n  private _targetList: BaseComponent[] = [\n    new BaseComponent(1, \"TextBox\"),\n    new BaseComponent(2, \"TextArea\"),\n    new BaseComponent(3, \"Image\"),\n    new BaseComponent(4, \"File\")\n  ];\n  public get targetList(): BaseComponent[] {\n    return this._targetList;\n  }\n  public set targetList(value: BaseComponent[]) {\n    this._targetList = value;\n  }\n\n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { MaterialModuleModule } from './material-module/material-module.module';\n\nimport { ComponentsListComponent } from './modules/shared/components/components-list/components-list.component';\nimport { FormBuilderComponent } from './features/form-builder/form-builder.component';\n\nimport { FeaturesModule } from './features/features.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FeaturesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","export class BaseComponent{\n\n    public id: number;\n    public name: string;\n\n    constructor(id: number, name:string) { \n        this.id = id;\n        this.name = name;\n     }\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Globals {\n\n    static role: string=\"vasile\";\n    static ComponentType = class {\n       public static textBox: string = \"textbox\";\n    };\n}\n\n@Injectable()\nexport class AppComponentTypes{\n    textBox: string = \"textBox\";\n}","import { NgModule } from \"@angular/core\";\nimport { FormBuilderComponent } from \"./form-builder/form-builder.component\";\nimport { MaterialModuleModule } from \"../material-module/material-module.module\";\nimport { SharedModule } from \"../modules/shared/shared.module\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\n@NgModule({\n  \n    declarations: [\n      FormBuilderComponent\n    ],\n    imports: [\n      BrowserModule,\n      BrowserAnimationsModule,\n      MaterialModuleModule, \n      SharedModule\n    ],\n    providers: [],\n    bootstrap: []\n  })\n  export class FeaturesModule { }","module.exports = \"<div class=\\\"row\\\">\\n  <p>\\n    Form Builder\\n  </p>\\n\\n  <div class=\\\"col-md-2\\\"></div>\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"container-lg\\\">\\n      <h2>Form</h2>\\n      <div cdkDropList #destinationList=\\\"cdkDropList\\\" [cdkDropListData]=\\\"formComponents\\\" [cdkDropListConnectedTo]=\\\"[sourceList]\\\"\\n        class=\\\"example-list\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\n\\n        <div class=\\\"example-box\\\" *ngFor=\\\"let item of formComponents; let i = index\\\" cdkDrag cdkDragLockAxis=\\\"y\\\"\\n          [cdkDragData]=\\\"item\\\" (CdkDragStart)=\\\"dragStart($event)\\\" (cdkDragEnded)=\\\"ended($event)\\\">\\n\\n          <div class=\\\"example-custom-placeholder\\\" *cdkDragPlaceholder></div>\\n\\n          <div [ngSwitch]=\\\"item.componentType\\\">\\n            <text-input *ngSwitchCase=\\\"appComponentTypes.textBox\\\" [inputModel] =\\\"formComponents[i]\\\" ></text-input>\\n          </div>\\n\\n          <div class=\\\"example-settings\\\" (click)=\\\"onSettingsClicked(i)\\\">\\n            <i class=\\\"fas fa-wrench\\\"></i>\\n          </div>\\n          <div class=\\\"example-cancel\\\" (click)=\\\"onClickMe(i)\\\">\\n            <i class=\\\"far fa-trash-alt fa-lg\\\"></i>\\n          </div>\\n\\n          <div class=\\\"example-handle\\\" cdkDragHandle>\\n            <svg width=\\\"24px\\\" fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n              <path d=\\\"M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z\\\"></path>\\n              <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"></path>\\n            </svg>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  <div *ngFor=\\\"let item of formComponents;\\\">\\n    {{item.placeholder}}\\n  </div>\\n  </div>\\n\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"example-container\\\">\\n      <h2>Available components</h2>\\n\\n      <div cdkDropList #sourceList=\\\"cdkDropList\\\" [cdkDropListData]=\\\"availableComponents\\\" [cdkDropListConnectedTo]=\\\"[destinationList]\\\"\\n        class=\\\"example-list\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\n        <div class=\\\"example-box\\\" *ngFor=\\\"let item of availableComponents\\\" cdkDrag [cdkDragData]=\\\"item\\\">\\n          {{item.componentType}}\\n          <div class=\\\"example-handle\\\" cdkDragHandle>\\n            <svg width=\\\"24px\\\" fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n              <path d=\\\"M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z\\\"></path>\\n              <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"></path>\\n            </svg>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-4\\\"></div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZlYXR1cmVzL2Zvcm0tYnVpbGRlci9mb3JtLWJ1aWxkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CdkDragEnd, moveItemInArray, CdkDragDrop, copyArrayItem } from '@angular/cdk/drag-drop';\nimport { ModelBase } from 'src/app/modules/shared/components/models/ModelBase';\nimport { AppComponentTypes } from 'src/app/core/globals';\nimport { MatDialog } from '@angular/material';\n\nimport { MatNativeDateModule } from '@angular/material';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { TextInputSettingsComponent } from 'src/app/modules/shared/components/text-input/pop-up-settings/text-input-settings.component';\nimport { TextboxModel } from 'src/app/modules/shared/components/text-input/models/TextboxModel';\n\n@Component({\n  selector: 'app-form-builder',\n  templateUrl: './form-builder.component.html',\n  styleUrls: ['./form-builder.component.scss'],\n  providers: [AppComponentTypes]\n\n})\nexport class FormBuilderComponent implements OnInit {\n\n  constructor(private appComponentTypes: AppComponentTypes, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loadComponents();\n\n    this.formComponents = [];\n  }\n\n  formComponents: any[];\n  availableComponents: any[];\n\n  destinationListName: string[] = [\"destinationList\"];\n  sourceListName: string[] = [\"sourceList\"];\n\n  loadComponents(): any {\n    this.availableComponents = [\n      new TextboxModel(\"\", \"textBox1\", 0, false, this.appComponentTypes.textBox, false,[\"\"],\"description\",\"placeholder\", \"validationMessage\", \"validationRule\", 100)   \n    ];\n  }\n\n  drop(event: CdkDragDrop<ModelBase[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      copyArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n    }\n  }\n\n  ended(event: CdkDragEnd) {\n    console.log(\"end to move item\");\n  }\n\n  onClickMe(index) {\n    if (index > -1) {\n      this.formComponents.splice(index, 1);\n    }\n  }\n\n\n\n  onSettingsClicked(index) {\n\n    var temp = this.formComponents[index];\n\n    let settings = {\n      key: \"1\",\n      id: \"1\",\n      componentType: \"setting\",\n      index: 1,\n      editable: false,\n      label: \"string\",\n      required: false,\n      value: \"no value\",\n      description: \"description\",\n      placeholder: \"placeholder\",\n      validationMessage: \"validationMessage\",\n      validationRule: \"validationRule\",\n      charactersLimit: 1\n    };\n\n\n\n    const dialogRef = this.dialog.open(TextInputSettingsComponent, {\n      data: settings\n    }\n    );\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result.label);\n\n            this.formComponents[index] = new ModelBase(\"\", \"0\", this.appComponentTypes.textBox, index, false, result.label, false, \"\");\n            \n\n    });\n  }\n}\n","import {DragDropModule} from '@angular/cdk/drag-drop';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModuleModule { }\n","\nexport class ModelBase{\n    key: string;\n    id: string;\n    componentType: string;\n    index: number;\n    editable: boolean;\n    label: string;\n    required: boolean;\n    value: any;\n\n    constructor(\n        __key?: string,\n        __id?: string,\n        __componentType?: string,\n        __index?: number,\n        __editable?: boolean,\n        __label?: string,\n        __required?: boolean, \n        __value?: any\n    ) {\n        this.key = __key || '';\n        this.id = __id;\n        this.componentType = __componentType || '';\n        this.index = __index === undefined ? 1 : __index;\n        this.editable = __editable;\n        this.label = __label || '';\n        this.required = !!__required;\n        this.value = __value || null;\n    }    \n}","import { Component, Injectable } from '@angular/core';\nimport { ModelBase } from '../../models/ModelBase';\n\n\n\n@Injectable()\nexport class TextboxModel extends ModelBase {\n    description: string;\n    placeholder: string;\n    validationMessage: string;\n    validationRule: string;\n    charactersLimit: number;\n\n    constructor(\n        __key?: string,\n        __id?: string,\n        __index?: number,\n        __editable?: boolean,\n        __label?: string,\n        __required?: boolean, \n        __value?: any,\n\n        __description?: string,\n        __placeholder?: string,\n        __validationMessage?: string,\n        __validationRule?: string,\n        __charactersLimit?: number\n    ) {\n        super(__key, __id, 'textbox', __index, __editable, __label, __required, __value);\n\n        this.description = __description || '';\n        this.placeholder = __placeholder || '';\n        this.validationMessage = __validationMessage || '';\n        this.validationRule = __validationRule || '';\n        this.charactersLimit = __charactersLimit || 250;\n    }\n    \n}","module.exports = \"<div class=\\\"settings-container\\\">\\n  <h1 mat-dialog-title>Text Box - details</h1>\\n  <mat-dialog-content class=\\\"mat-typography\\\">\\n    <form>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Label\\\" [(ngModel)]=\\\"data.label\\\" name=\\\"label\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"data.description\\\" name=\\\"description\\\">\\n      </mat-form-field>\\n\\n\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"placeholder\\\" [(ngModel)]=\\\"data.placeholder\\\" name=\\\"placeholder\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\" [labelPosition]=\\\"labelPosition\\\">Checked</mat-checkbox>\\n      </mat-form-field>\\n    </form>\\n  </mat-dialog-content>\\n  <mat-dialog-actions>\\n    <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\n    <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>Ok</button>\\n  </mat-dialog-actions>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2hhcmVkL2NvbXBvbmVudHMvdGV4dC1pbnB1dC9wb3AtdXAtc2V0dGluZ3MvdGV4dC1pbnB1dC1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TextboxModel } from '../models/TextboxModel';\nimport {MatNativeDateModule} from '@angular/material';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\n\n\nimport {MatButtonModule, MatFormFieldModule, MatInputModule, MatRippleModule} from '@angular/material'\n@Component({\n  selector: 'text-input-settings',\n  templateUrl: './text-input-settings.component.html',\n  styleUrls: ['./text-input-settings.component.scss']\n})\n\nexport class TextInputSettingsComponent implements OnInit {\n  ngOnInit(): void {\n   \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  labelPosition = 'before';\n  constructor(\n    public dialogRef: MatDialogRef<TextInputSettingsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TextboxModel) {}\n}","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"{{inputModel.id}}\\\">{{inputModel.label}}</label>\\n     <input type=\\\"text\\\" placeholder=\\\"{{inputModel.placeholder}}\\\" class=\\\"form-control\\\" id=\\\"{{inputModel.id}}\\\" readonly=\\\"{{inputModel.editable}}\\\">\\n     <small class=\\\"form-text text-muted\\\">{{inputModel.description}}</small>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2hhcmVkL2NvbXBvbmVudHMvdGV4dC1pbnB1dC90ZXh0LWJveC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TextInputSettingsComponent } from './pop-up-settings/text-input-settings.component';\nimport { MatDialog } from '@angular/material';\nimport { ModelBase } from '../models/ModelBase';\nimport { TextboxModel } from './models/TextboxModel';\n\n@Component({\n  selector: 'text-input',\n  templateUrl: './text-box.component.html',\n  styleUrls: ['./text-box.component.scss']\n})\nexport class TextBoxComponent implements OnInit {\n  @Input() inputModel: TextboxModel;\n  \n  constructor(public dialog: MatDialog) {}\n  ngOnInit() {\n\n  }  \n}\n","import { NgModule } from \"@angular/core\";\nimport { TextBoxComponent } from \"./components/text-input/text-box.component\";\nimport { TextInputSettingsComponent } from \"./components/text-input/pop-up-settings/text-input-settings.component\";\nimport { MaterialModuleModule } from \"src/app/material-module/material-module.module\";\n\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    entryComponents:[TextInputSettingsComponent],\n    imports: [MaterialModuleModule, FormsModule],\n    declarations: [TextBoxComponent, TextInputSettingsComponent],\n    exports: [TextBoxComponent, TextInputSettingsComponent, MaterialModuleModule, FormsModule],\n    providers: []\n\n})\nexport class SharedModule { };","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}